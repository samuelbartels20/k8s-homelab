---

#
# (REQUIRED) Cluster details - Cluster represents the Kubernetes cluster layer and any additional customizations
#

# (REQUIRED) The network (in CIDR notation) your nodes are on (e.g. 192.168.1.0/24)
node_network: "192.168.8.0/24"

# (REQUIRED) Use only 1, 3 or more ODD number of controller nodes, recommended is 3. Worker nodes are optional.
node_inventory:
  - name: "control-plane-1"            # (REQUIRED) Name of the node (must match [a-z0-9-\]+)
    address: "192.168.8.147"         # (REQUIRED) IP address of the node
    controller: true    # (REQUIRED) Set to true if this is a controller node
    disk: "/dev/sda"            # (REQUIRED) Device path or serial number of the disk for this node (talosctl get disks -n <ip> --insecure)
    mac_addr: "bc:24:11:19:6a:e1"        # (REQUIRED) MAC address of the NIC for this node, must be lowercase (talosctl get links -n <ip> --insecure)
    schematic_id: "376567988ad370138ad8b2698212367b8edcb69b5fd68c80be1f2ec7d603b4ba"    # (REQUIRED) Schematic ID from https://factory.talos.dev/
    mtu: 1500           # (ADVANCED/OPTIONAL) MTU for the NIC. DEFAULT: 1500
    secureboot: false   # (ADVANCED/OPTIONAL) SecureBoot mode on UEFI platforms. Ref: https://www.talos.dev/latest/talos-guides/install/bare-metal-platforms/secureboot
    encrypt_disk: false # (ADVANCED/OPTIONAL) TPM-based disk encryption. Ref: https://www.talos.dev/latest/talos-guides/install/bare-metal-platforms/secureboot

#   - name: "control-plane-2"              # (REQUIRED) Name of the node (must match [a-z0-9-\]+)
#     address: "192.168.8.148"         # (REQUIRED) IP address of the node
#     controller: true   # (REQUIRED) Set to true if this is a controller node
#     disk: "/dev/sda"            # (REQUIRED) Device path or serial number of the disk for this node (talosctl get disks -n <ip> --insecure)
#     mac_addr: "bc:24:11:77:5b:42"        # (REQUIRED) MAC address of the NIC for this node, must be lowercase (talosctl get links -n <ip> --insecure)
#     schematic_id: "376567988ad370138ad8b2698212367b8edcb69b5fd68c80be1f2ec7d603b4ba"    # (REQUIRED) Schematic ID from https://factory.talos.dev/
#     mtu: 1500           # (ADVANCED/OPTIONAL) MTU for the NIC. DEFAULT: 1500
#     secureboot: false   # (ADVANCED/OPTIONAL) SecureBoot mode on UEFI platforms. Ref: https://www.talos.dev/latest/talos-guides/install/bare-metal-platforms/secureboot
#     encrypt_disk: false # (ADVANCED/OPTIONAL) TPM-based disk encryption. Ref: https://www.talos.dev/latest/talos-guides/install/bare-metal-platforms/secureboot

#   - name: "control-plane-3"              # (REQUIRED) Name of the node (must match [a-z0-9-\]+)
#     address: "192.168.8.149"
#     controller: true   # (REQUIRED) Set to true if this is a controller node
#     disk: "/dev/sda"            # (REQUIRED) Device path or serial number of the disk for this node (talosctl get disks -n <ip> --insecure)
#     mac_addr: "bc:24:11:06:ef:30"        # (REQUIRED) MAC address of the NIC for this node, must be lowercase (talosctl get links -n <ip> --insecure)
#     schematic_id: "376567988ad370138ad8b2698212367b8edcb69b5fd68c80be1f2ec7d603b4ba"    # (REQUIRED) Schematic ID from https://factory.talos.dev/
#     mtu: 1500           # (ADVANCED/OPTIONAL) MTU for the NIC. DEFAULT: 1500
#     secureboot: false   # (ADVANCED/OPTIONAL) SecureBoot mode on UEFI platforms. Ref: https://www.talos.dev/latest/talos-guides/install/bare-metal-platforms/secureboot
#     encrypt_disk: false # (ADVANCED/OPTIONAL) TPM-based disk encryption. Ref: https://www.talos.dev/latest/talos-guides/install/bare-metal-platforms/secureboot
# # (REQUIRED) The hostname of the cluster, this will be used as the cluster name

# (REQUIRED) The DNS servers to use for the cluster nodes. (DEFAULT: Cloudflare DNS)
dns_servers:
  - "1.1.1.1"
  - "1.0.0.1"

# (REQUIRED) The NTP servers to use for the cluster nodes. (DEFAULT: Cloudflare NTP)
ntp_servers:
  - "162.159.200.1"
  - "162.159.200.123"

# (REQUIRED) The pod CIDR for the cluster, this must NOT overlap with any
#   existing networks and is usually a /16 (64K IPs).
# If you want to use IPv6 check the advanced flags below
pod_network: "10.69.0.0/16"

# (REQUIRED) The service CIDR for the cluster, this must NOT overlap with any
#   existing networks and is usually a /16 (64K IPs).
# If you want to use IPv6 check the advanced flags below
service_network: "10.96.0.0/16"

# (REQUIRED) The IP address of the Kube API, choose an available IP
#   in your nodes host network that is NOT being used.
controller_vip: "192.168.8.200"

# (OPTIONAL) Add additional SANs to the Kube API cert, this is useful
#   if you want to call the Kube API by hostname rather than IP
tls_sans: []

# (REQUIRED) GitHub details for Flux - Flux is used to manage the cluster configuration.
github:
  # (REQUIRED) GitHub repository (e.g. onedr0p/cluster-template)
  repository: "samuelbartels20/homelab-cluster"
  # (REQUIRED) GitHub repository branch
  branch: "main"
  # (REQUIRED) Token for GitHub push-based sync
  # 1. Generate a new token with the following command:
  #    > openssl rand -hex 16
  # 2. Copy the token and paste it below
  webhook_token: "e8959ec788a6efe11242aa720a2ce4ac"
  # (OPTIONAL) Use a private GitHub repository
  #   1. After running `task init` a deploy.key and deploy.key.pub will be created.
  #   2. Paste the public key from `deploy.key.pub` into the deploy keys section of your GitHub repository settings.
  #   3. The file contents of `deploy.key` will be automatically used when running `task configure`
  private: false

#
# (OPTIONAL) Cloudflare details - Cloudflare is used for DNS, TLS certificates and tunneling.
#

cloudflare:
  # (REQUIRED) Disable to manually setup and use a different DNS provider - setting this
  #   to false will not deploy a network namespace or the workloads contained within.
  enabled: true
  # (REQUIRED) Cloudflare Domain
  domain: "samcloud.online"
  # (REQUIRED) Cloudflare API Token (NOT API Key)
  #   1. Head over to Cloudflare and create a API Token by going to
  #      https://dash.cloudflare.com/profile/api-tokens
  #   2. Under the `API Tokens` section click the blue `Create Token` button.
  #   3. Click the blue `Use template` button for the `Edit zone DNS` template.
  #   4. Name your token something like `kubernetes`
  #   5. Under `Permissions`, click `+ Add More` and add each permission below:
  #      `Zone - DNS - Edit`
  #      `Account - Cloudflare Tunnel - Read`
  #   6. Limit the permissions to a specific account and zone resources.
  #   7. Click the blue `Continue to Summary` button and then the blue `Create Token` button.
  #   8. Copy the token and paste it below.
  token: "Rc_hF6SmuoBoK6zmVzRFeqZLGRMtOCH6s_NUauRt"
  # (REQUIRED) Optionals for Cloudflare Acme
  acme:
    # (REQUIRED) Use the ACME production server when requesting the wildcard certificate.
    #   By default the ACME staging server is used. This is to prevent being rate-limited.
    #   Update this option to `true` when you have verified the staging certificate
    #   works and then re-run `task configure` and push your changes to Github.
    production: false
  # (REQUIRED) Provide LAN access to the cluster ingresses for internal ingress classes
  # The Load balancer IP for internal ingress, choose an available IP
  #   in your nodes host network that is NOT being used.
  ingress_vip: "192.168.8.201"
  # (REQUIRED) Gateway is used for providing DNS to your cluster on LAN
  # The Load balancer IP for k8s_gateway, choose an available IP
  #   in your nodes host network that is NOT being used.
  gateway_vip: "192.168.8.202"
  # (REQUIRED) Options for Cloudflare Tunnel
  #   1. Authenticate cloudflared to your domain with the following command:
  #     > cloudflared tunnel login
  #   2. Create the tunnel with the following command:
  #     > cloudflared tunnel create --credentials-file cloudflared.json k8s
  #   3. The file contents of `cloudflared.json` will be automatically used when running `task configure`
  tunnel:
    # (REQUIRED) Provide WAN access to the cluster ingresses for external ingress classes
    # The Load balancer IP for external ingress, choose an available IP
    #   in your nodes host network that is NOT being used.
    ingress_vip: "192.168.8.203"

#
# (ADVANCED) Here be dragons - Advanced settings for the brave
#

# (OPTIONAL) The default gateway for the nodes
#   Leave blank if your default gateway is the same as the first IP in the network (.1)
node_default_gateway: "192.168.8.1"

# (OPTIONAL) Add vlan tag to network master device, leave blank if you tag
#   ports on your switch or do not use VLANs at all.
#   Ref: https://www.talos.dev/latest/advanced/advanced-networking/#vlans
vlan: ""

# (OPTIONAL) Change Cilium load balancer mode
#   Ref: https://docs.cilium.io/en/stable/network/kubernetes/kubeproxy-free/
loadbalancer_mode: "dsr"

# (OPTIONAL) Use cilium BGP control plane for L3 routing
#   Needs a BGP capable router setup with the node IPs as peers.
#   To keep things simple, node network will be used for BGP peering.
#   Ref: https://docs.cilium.io/en/latest/network/bgp-control-plane/bgp-control-plane/
bgp:
  enabled: false
  # (REQUIRED) Router IP address - BGP must be configured on this router using FRR or similar
  router_address: ""
  # (REQUIRED) Router ASN
  router_asn: 64513
  # (REQUIRED) Node ASN
  node_asn: 64514

# (OPTIONAL) Enable Dual Stack IPv4 first
#   IMPORTANT: I am looking for people to help contribute IPv6 support since I cannot test it.
#     Ref: https://github.com/onedr0p/cluster-template/discussions/1510
#   IMPORTANT: Cilium does not currently support IPv6 L2 announcements.
dual_stack_ipv4_first: false
